server {
    listen 80;
    server_name bonbon.xyz;

    location / {
        proxy_pass http://192.168.122.xxx:8080;
    }
}



server {
    listen 80;
    server_name sub1.bonbon.xyz;

    location / {
        root /path/to/sub1/directory;
    }
}

server {
    listen 80;
    server_name sub2.bonbon.xyz;

    location / {
        root /path/to/sub2/directory;
    }
}

---------------------
# security set, Place this configuration in your Nginx configuration directory (typically /etc/nginx/)
http {
    # Basic settings
    server_tokens off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    # Disables server tokens to hide Nginx version
    # Adds X-Frame-Options to prevent clickjacking
    # Adds X-Content-Type-Options to prevent MIME type sniffing
    # Adds X-XSS-Protection to enable browser's XSS filtering

    # SSL settings, Forces HTTPS by redirecting all HTTP traffic
    # Uses strong SSL protocols and ciphers
    # Implements HSTS (HTTP Strict Transport Security)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # DDoS protection
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    # File upload limits
    client_max_body_size 10M;

    server {
        listen 80;
        server_name example.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name example.com;

        ssl_certificate /path/to/your/fullchain.pem;
        ssl_certificate_key /path/to/your/privkey.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

        # WordPress specific rules
        location / {
            proxy_pass http://backend_wordpress;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Apply rate limiting
            limit_req zone=one burst=5;
        }

        # Deny access to sensitive files
        location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/.*.php$ {
            deny all;
        }

        # Prevent access to hidden files
        location ~ /\. {
            deny all;
        }

        # Block PHP execution in uploads directory
        location /wp-content/uploads/ {
            location ~ \.php$ {
                deny all;
            }
        }
    }
}

---------------
# more secure setup /etc/nginx/nginx.conf
user www-data;
worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;
}

# Set Up Security Headers: Add security headers to Nginx configuration to enhance security
server {
    listen 80;
    server_name yourdomain.com;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Content-Security-Policy "default-src 'self';";

    # Other configurations
}

# Rate Limiting: Configure rate limiting to protect against brute-force attacks.
http {
    limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;

    server {
        location / {
            limit_req zone=one burst=5 nodelay;
            ...
        }
    }
}

# Example /etc/nginx/sites-available/reverse-proxy.conf:
server {
    listen 80;
    server_name yourdomain.com;

    location / {
        proxy_pass http://192.168.0.201;  # Backend Apache server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Additional security settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Implement logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

sudo ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/

# Configure HTTPS:
server {
    listen 80;
    server_name yourdomain.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name yourdomain.com;

    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location / {
        proxy_pass http://192.168.0.201;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

---------------------------
# back end webserver, 
# Configure Nginx Security Headers: Edit your Nginx configuration (e.g., /etc/nginx/sites-available/wordpress):
server {
    listen 80;
    server_name yourdomain.com;
    root /var/www/html/wordpress;

    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Content-Security-Policy "default-src 'self';";

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;  # Adjust if needed
    }

    location ~ /\.ht {
        deny all;
    }
}

# Install and Secure PHP
sudo apt install php php-fpm php-mysql php-cli php-curl php-gd php-xml php-mbstring -y

# Secure PHP Configuration: Edit the /etc/php/X.X/fpm/php.ini 
expose_php = Off
memory_limit = 256M
post_max_size = 64M
upload_max_filesize = 64M
max_execution_time = 300
max_input_time = 1000
display_errors = Off




